/* GLOBAL CSS */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  /* font-size: 16px; */
  /* giá trị của rem phụ thuộc vào thuộc tính font-size được khai báo ở thẻ html 
    ví dụ của trường hợp này 1 rem = 16px */
  font-size: 62.5%;
  /* set font-size 62.5% để dễ chuyển đổi đơn vị từ px sang rem, 62.5% sẽ tương đương = 10px, như vậy 1rem =10px, thì 12px = 1.2rem */
  /* ĐỂ LÀM CHO WEBSITE ĐƯỢC TRƯỢT MƯỢT MÀ THÌ THÊM THUỘC TÍNH SAU: 
  scroll-behavior: smooth */
  scroll-behavior: smooth;
}

body {
  font-family: "Montserrat", sans-serif;
  color: #212529;
  background: #fff;
  letter-spacing: 0.1rem;
}

a {
  text-decoration: none;
}

li {
  list-style: none;
  display: inline;
}

:root {
  --white: white;
  --darkpurple: #4e2a84;
}

button {
  padding: 1.3rem 3.2rem;
  border-radius: 0.5rem;
  border: 1px solid var(--white);
  background-color: #ff0e83;
  color: var(--white);
  word-spacing: 2px;
  letter-spacing: 1px;
  font-size: 1.4rem;
  cursor: pointer;
  transition: all 0.5s;
}

button:hover {
  background-color: var(--white);
  border: 1px solid #ff0e83;
  color: #212529;
}

/* HEADER CSS  */
.header {
  background-color: #4e2a84;
  padding: 20px 0;
}

.header__content {
  width: 70%;
  margin: 0 auto;
  display: flex;
  color: #fff;
  justify-content: space-around;
  align-items: center;
}

.header__link {
  color: var(--white);
  font-size: 1.2rem;
  font-weight: 600;
  margin: 0 0.4rem;
  padding: 0 1.2rem;
  letter-spacing: 2px;
  transition: all 0.5s;
  /* transition nên để ở vị trí trước khai báo hover thì hiệu ứng lúc rê chuột vào và di chuột ra nó chuyển động từ từ giống nhau, còn nếu để ở hover thì hiệu lúc lúc rê chuột vào là giống khai ở transition, nhưng khi rê chuột ra thì nó thay đổi rất nhanh */
}

.header__content p {
  font-size: 3.4rem;
  font-weight: 700;
}

.hover:hover {
  color: #ff0e83;
  transition: all 0.5s;
}

.active {
  color: #ff0e83;
}

/* CAROUSEL CSS */
.carousel {
  background-image: url(./web/images/b3.jpg);
  height: 80rem;
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  text-align: center;
  display: flex;
  justify-content: center;
  align-items: center;
}

.carousel__content {
  color: #fff;
}

.carousel__content h1 {
  font-size: 5.2rem;
  letter-spacing: 3px;
}

.carousel__content p {
  font-size: 1.7rem;
  padding: 2.3rem 0;
}

/* INTRO CSS  */
.intro {
  display: grid;
  /* grid-template-columns: 25% 25% 25% 25%;  khi kích thước của các cột là như nhau như trường hợp này thì ta dùng cách viết ngắn gọn sau đây*/
  /* grid-template-columns: repeat(4,25%); */
  /* tuy nhiên đối với grid thì có 1 đơn vị tốt hơn là fr = fraction = phân số , thường được ưu tiên sử dụng*/
  grid-template-columns: repeat(4, 1fr);
  /* viết 4,1fr nghĩa là mỗi column sẽ có kích thước là 1/4 */
}

.intro__ab1 {
  /* grid-column: n / m là thuộc tính gom cột, grid-row: n / span row là thuộc tính gom hàng  
    n là số line bắt đầu, m là số line kết thúc*/
  grid-column: 2 / span 2;
  /* hoặc cách khai báo khác là grid-column: 2 / 4 */
}

.intro__bakebest {
  grid-column: 1 / span 2;
}

.intro__ab4 {
  grid-column: 3 / span 2;
}

.intro__item img {
  width: 100%;
  display: block;
  /* thêm display block cho hình để xoá khoảng hở giữa image trên và dưới, vì bản chất của thẻ img là inline */
}

.intro__item {
  display: flex;
  /* justify-content: center; ko cần khai báo thuộc tính này, vì trong trường hợp này kích thước của thẻ con chiếm 100% thẻ cha, nên ko có tác dụng
    chỉ khai báo thuộc tính này đối với trường hợp như của phần carousel, vì kích thước thẻ con lúc đó không chiếm 100% thẻ cha*/
  align-items: center;
  text-align: center;
}

.intro__item h2 {
  font-size: 2.4rem;
  font-weight: 600;
  color: #fff;
  margin-bottom: 1.6rem;
}

.intro__item p {
  font-size: 1.4rem;
  line-height: 2.9rem;
  color: #c1c1c1;
}

.intro__item--bg1,
.intro__item--bg6 {
  background: #4e2a84;
  padding: 0 3.2rem;
}

.intro__item--bg3 {
  background: #ff0e83;
  padding: 0 3.2rem;
}

.intro__item--bg4 {
  background: #ed6498;
  padding: 0 3.2rem;
}

.intro__item--bg5 {
  background: #836eaa;
  padding: 0 3.2rem;
}

/* .intro__item--bg6{
    background: #4e2a84;
    padding: 0 3.2rem;
} */

/* NUMBER CSS */
.number {
  padding: 70px 0;
}

.number__content {
  display: flex;
  justify-content: space-around;
  width: 70%;
  margin: 0 auto;
  text-align: center;
}

/* khai báo  p:first-child chỉ đúng trong trường hợp thẻ p phải là con đầu tiên của thẻ cha thì mới đúng, giả dụ thêm 1 thẻ img vào trên thẻ p này thì thuộc tính p:first-child không còn tác dụng nữa*/
/* .number__content-item p:first-child {
    font-size: 3.2rem;
    font-weight: 700;
    color: var(--darkpurple);
} */
/* vì vậy người ta dùng thuộc tính p:first-of-type để thay thế cho p:first-child */
.number__content-item p:first-of-type {
  font-size: 3.2rem;
  font-weight: 700;
  color: var(--darkpurple);
}

.number__content-item p:last-of-type {
  font-size: 2.44rem;
  font-weight: 550;
  letter-spacing: 4px;
  padding: 2.4rem 0;
}

/* SERVICE CSS  */
.service {
  background-image: url(./web/images/s1.jpg);
  background-size: cover;
  padding: 70px 0;
  text-align: center;
}
.service__content {
  display: flex;
  justify-content: space-around;
  width: 70%;
  margin: 0 auto;
}

.service__content h4 {
  font-size: 2.6rem;
  margin: 15px 0;
}

.service__content p {
  font-size: 1.4rem;
  line-height: 2.5rem;
  padding-bottom: 1.6rem;
}

.ilogo {
  width: 11rem;
  height: 11rem;
  border-radius: 50%;
  background-color: #fff;
  line-height: 11rem;
  color: var(--darkpurple);
  border: 1px solid var(--darkpurple);
  font-size: 6rem;
  transition: all 0.5s;
}
.commonstyle {
  font-size: 5rem;
  color: var(--white);
  padding-bottom: 7rem;
}

/* Trường hợp của service__content này không dùng được justify-content để tạo khoảng cách được, vì giữa các item con của service__content đã chiếm 100% diện tích thẻ cha rồi, nên trường hợp này mình dùng theo cách truyền thống là khai báo padding để tạo khoảng cách */

.service__content-item {
  padding: 0 2rem;
}
/* CSS: Rê chuột vào thẻ cha thì thẻ icon có hiệu ứng đổi màu  */
.service__content-item:hover .ilogo {
  color: #ff0e83;
}

/* GALLERY CSS  */
.gallery__content {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 3rem;
  /* gap chỉ dùng cho display: grid thôi, bản chất giống y như margin, dùng để cách các phần tử */
  padding: 0 1.5rem;
}

.gallery__g1 {
  grid-column: 1 / span 2;
}

.gallery__g6 {
  grid-column: 3 / span 2;
}

.gallery__item img {
  width: 100%;
  height: 100%;
  display: block;
}

.gallery h3 {
  color: black;
  text-align: center;
  padding: 7rem 0;
}

/* Để xử lý phần chữ nằm trên hình ảnh như của case gallery này thì dùng position */
.gallery__item {
  position: relative;
  /* set thuộc tính overflow hidden để ẩn các phần tử con đang ở bên ngoài thẻ cha đi, để tránh hiệu ứng khi chưa rê chuột vào vùng của thẻ cha đã làm phát sinh hiệu ứng của hover  */
  overflow: hidden;
}
.gallery__overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(48, 132, 163, 0.2);
  color: white;
  padding: 3.8rem 2.8rem;
  text-align: right;
}

.gallery__overlay p {
  position: absolute;
  bottom: 3.8rem;
  right: 2.8rem;
  font-size: 1.4rem;
  transform: translateY(5rem);
  opacity: 0;
  transition: all 0.5s;
}

.gallery__item:hover .gallery__overlay p {
  transform: translateY(0);
  opacity: 1;
}

.gallery__overlay h2 span {
  font-weight: 300;
}

.gallery__overlay h2 {
  transform: translateY(2rem);
  font-size: 3rem;
  transition: all 0.5s;
}

.gallery__item:hover .gallery__overlay h2 {
  transform: translateY(0);
}
/* những kiểu selector mới của CSS3 giúp tạo đường gạch ngang mà ko cần dùng thẻ hr */

/* .gallery__overlay h2::before{
    content: "The ";
} */

.gallery__overlay h2::after {
  content: "";
  width: 100%;
  height: 0.5rem;
  background-color: white;
  /* ::after này bản chất là thẻ inline, nên inline này ko đc xuống hàng, và chúng ta sẽ không set được kích thước cho thẻ inline, chúng ta chỉ set được kích thước cho thẻ block thôi, vậy nên phải chuyển đặc tính của nó qua dạng block */
  display: block;
  margin-top: 1rem;
  transform: translateY(20px);
  transition: all 0.5s;
  opacity: 0;
}

.gallery__item:hover .gallery__overlay h2::after {
  transform: translateY(0);
  opacity: 1;
}

/* Dùng thư viện animation lightbox js để hiện pop-up */
/* Nhấn ctrl + F5 để clear cache */

/* TEAM CSS  */
.team {
  background-color: #4e2a84;
}
.team h3 {
  text-align: center;
  padding-top: 7rem;
}
.team__content {
  width: 80%;
  margin: 0 auto;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 2.5rem 3rem;
}

.team__content-item {
  position: relative;
}
.team__content-item img {
  width: 100%;
  display: block;
}

.team__name {
  background-color: rgb(255, 15, 131);
  color: #fff;
  position: absolute;
  left: 0;
  bottom: 0;
  width: 100%;
  padding: 3.5rem 2.5rem;
  opacity: 1;
  transition: all 1s;
}

.team__name h2,
.team__detail h2 {
  font-size: 2.1rem;
  margin-bottom: 1.5rem;
}

.team__name p,
.team__detail p {
  font-size: 1.4rem;
  line-height: 2.8rem;
}
.team__detail {
  position: absolute;
  left: 0;
  top: 0;
  color: #fff;
  padding: 7rem 2.5rem;
  background-color: rgba(0, 0, 0, 0.418);
  width: 100%;
  height: 100%;
  opacity: 0;
  transition: all 1s;
}

.team__detail h2 {
  color: #ff0e83;
}

.team__content-item:hover .team__name {
  opacity: 0;
}

.team__content-item:hover .team__detail {
  opacity: 1;
}

/* TESTIMONIALS CSS */
.testimonials {
  background-image: url(./web/images/cc1.jpg);
  background-position: top center;
  background-repeat: no-repeat;
  background-size: cover;
  padding: 7rem 0;
}

.testimonials h3 {
  text-align: center;
  padding-top: 7rem;
}
.testimonials__content {
  width: 80%;
  margin: 0 auto;
  border: 3px solid #ff0e83;
  background-color: rgba(255, 255, 255, 0.5);
  text-align: center;
  padding: 3.2rem;
}

.item p:first-of-type {
  font-size: 1.6rem;
  color: black;
  line-height: 3rem;
  letter-spacing: 0.3rem;
}
.item p:last-of-type {
  color: white;
  font-size: 1.6rem;
  font-weight: 700;
  margin-top: 15px;
  letter-spacing: 0.3rem;
}
.item p i {
  color: #2cbeff;
  font-size: 3.3rem;
  padding: 0 1.8rem;
}

element.style {
}
.owl-theme .owl-controls .owl-page.active span,
.owl-theme .owl-controls.clickable .owl-page:hover span {
  filter: Alpha(Opacity=100);
  opacity: 1;
}

/* Để tạo hiệu ứng cho phần TESTIMONIALS thì dùng thư viện Owl Carousel hoặc slick hoặc Swiper*/

/* form css */
.form h3 {
  font-size: 5rem;
  padding: 7rem 0;
  text-align: center;
}
/* Thuộc tính "disabled" có thể sử dụng ở các thẻ như thẻ a, thẻ button, giúp cho người dùng không click vào đc link đó hoặc button đó */
.form .form__content form {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 15px 35px;
  width: 75%;
  margin: 0 auto;
}

.form .form__content textarea {
  grid-column: 1 / span 2;
  padding: 10px;
  border: 1px solid black;
  border-radius: 5px;
  font-size: 1.6rem;
  font-weight: 600;
  /* thêm thuộc tính resize: none để bỏ thuộc tính ô input tự động chỉnh sửa size */
  resize: none;
}
.form .form__content textarea::placeholder {
  color: black;
}
.form .form__content input:last-of-type {
  grid-column: 1 / span 2;
  background-color: #ff0e83;
}

.form .form__content input {
  padding: 10px;
  border: 1px solid black;
  border-radius: 5px;
  font-size: 1.6rem;
  font-weight: 600;
}

.map iframe {
  width: 100%;
}
.backToTop {
  position: fixed;
  right: 50px;
  bottom: 50px;
}

.backToTop i {
  color: #0bbbcc;
  border: 2px solid #0bbbcc;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  text-align: center;
  line-height: 40px;
  font-size: 32px;
}
